import type { CollisionGroupsProps, GroupsDef } from './types';
declare class __sveltets_Render<TGroupsDef extends GroupsDef> {
    props(): CollisionGroupsProps<TGroupsDef>;
    events(): {};
    slots(): {};
    bindings(): "";
    exports(): {};
}
interface $$IsomorphicComponent {
    new <TGroupsDef extends GroupsDef>(options: import('svelte').ComponentConstructorOptions<ReturnType<__sveltets_Render<TGroupsDef>['props']>>): import('svelte').SvelteComponent<ReturnType<__sveltets_Render<TGroupsDef>['props']>, ReturnType<__sveltets_Render<TGroupsDef>['events']>, ReturnType<__sveltets_Render<TGroupsDef>['slots']>> & {
        $$bindings?: ReturnType<__sveltets_Render<TGroupsDef>['bindings']>;
    } & ReturnType<__sveltets_Render<TGroupsDef>['exports']>;
    <TGroupsDef extends GroupsDef>(internal: unknown, props: ReturnType<__sveltets_Render<TGroupsDef>['props']> & {}): ReturnType<__sveltets_Render<TGroupsDef>['exports']>;
    z_$$bindings?: ReturnType<__sveltets_Render<any>['bindings']>;
}
declare const CollisionGroups: $$IsomorphicComponent;
type CollisionGroups<TGroupsDef extends GroupsDef> = InstanceType<typeof CollisionGroups<TGroupsDef>>;
export default CollisionGroups;
