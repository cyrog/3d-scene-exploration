import type { AutoCollidersProps, MassDef } from './types';
declare class __sveltets_Render<TMassDef extends MassDef> {
    props(): AutoCollidersProps<TMassDef>;
    events(): {};
    slots(): {};
    bindings(): "colliders";
    exports(): {
        /**
           * Refresh the colliders.
           */ refresh: () => void;
    };
}
interface $$IsomorphicComponent {
    new <TMassDef extends MassDef>(options: import('svelte').ComponentConstructorOptions<ReturnType<__sveltets_Render<TMassDef>['props']>>): import('svelte').SvelteComponent<ReturnType<__sveltets_Render<TMassDef>['props']>, ReturnType<__sveltets_Render<TMassDef>['events']>, ReturnType<__sveltets_Render<TMassDef>['slots']>> & {
        $$bindings?: ReturnType<__sveltets_Render<TMassDef>['bindings']>;
    } & ReturnType<__sveltets_Render<TMassDef>['exports']>;
    <TMassDef extends MassDef>(internal: unknown, props: ReturnType<__sveltets_Render<TMassDef>['props']> & {}): ReturnType<__sveltets_Render<TMassDef>['exports']>;
    z_$$bindings?: ReturnType<__sveltets_Render<any>['bindings']>;
}
declare const AutoColliders: $$IsomorphicComponent;
type AutoColliders<TMassDef extends MassDef> = InstanceType<typeof AutoColliders<TMassDef>>;
export default AutoColliders;
